# maven
maven.apache.org
ant.apache.org

아파치 메이븐(Apache Maven)은 아파치 소프트웨어 재단에서 개발한 
자바(Java) 기반 프로젝트의 라이프사이클(Life Cycle) 관리를 위한 빌드 도구 

빌드 도구는 프로젝트 생성, 테스트 빌드, 배포 등의 작업을 위한 전용 프로그램이며, 
프로젝트 기간 동안 계속해서 늘어나는 라이브러리 추가 프로젝트를 진행하고, 
라이브러리의 버전 동기화의 어려움을 해소하고자 등장

자바 프로그램 개발을 대상으로 한 오픈소스 빌드 도구인 아파치 앤트의 후속으로 개발되었음
앤트는 자바에 널리 보급된 최초의 빌드도구였는데, 자바 개발방식이 
진화하면서 더욱 규모가 크고 복잡한 개발에 이용되면서 한계가 드러나기 시작힘

즉, 프로그램 컴파일, JAR 패키징은 있었지만, 빌드한 프로그램의 테스트나
Javadoc 문서생성 같은 작업을 할때는 사용하기 까다로웠음
그래서, 빌드에 국한하지 않고 애플리케이션 전 과정을 자동화할 수 있도록
개발한 도구가 메이븐임

한편, 메이븐의 단점을 보완한 새로운 빌드도구로 그레이들이 있음
xml 설저이 주인 maven에 비해 json 형식으로 설정함
안드로이드 studio에 처음 도입되어 지금은 자바 진영의 핵심 
빌드도구로 자리 잡음

POM(Project Object Model) - 프로젝트 객체 모델
프로젝트의 다양한 정보를 처리하기 위한 객체 모델이다.
pom.xml에는 프로젝트 설정을 XML 태그로 기술하고 있다.

개발자는 프로젝트에 사용할 라이브러리를 pom.xml에 dependency로 정의만 
해두면 메이븐이 repository에서 검색해서 자동으로 추가해준다. 
심지어 참조하고있는 library까지 모두 찾아서 추가해준다.
의존 라이브러리의 경로는 USER_HOME/.m2/repository 임

pom에 추가하는 라이브러리는 mvn repo에서 검색하여 알아냄



# tiles

레이아웃 템플릿 엔진
웹 페이지의 상단이나 하단 메뉴와 같이 반복적으로 사용되는 
부분들에 대한 코드를 분리해서 예쁘게 한 곳에서 관리를 가능하게 
해주는 프레임워크

중복되는 <include> 태그를 사용하지 않아도 
지정된 페이지 레이아웃에 따라 페이지 타일을 
조합하여 완전한 페이지로 만들어 줌

화면 기본 구성 레이아웃 템플릿 정의하고 상속을 통하여 
대부분 구조를 재사용할 수 있는 기능 및 설정파일을 통한 
통합 관리를 통하여 확장성 있고 일관되게 페이지 구성을 관리

소스의 중복을 피하고 유지보수를 용이하게 하기 위해 사용

pom.xml에 tiles 라이브러리 등록
servlet-context.xml에 tiles 설정파일 위치와 view resolver 
등록 후 우선순위 재설정
tiles 설정파일에 기본 레이아웃 템플릿과 요청마다 개별적으로 보여줄
페이지 설정

# 프로젝트 작성 순서

spring mvc project
maven java version, web module 버젼 재설정 (1.6 -> 1.8, 2.5 -> 3.1)
spring framework version (3 -> 4/5)
